PCAssociation
	superclass: #PCMagnitude;
	instanceSpecification: #(#pointers #words );
	instanceVariables: #(#key #value );
	classVariables: #();
	package: #'PharoCandle-Kernel-Collections-Unordered'.

PCAssociation >> < aLookupKey
[
	"Sort by keys."
	^ key < aLookupKey key
]

PCAssociation >> = anAssociation
[
	"True if the receiver and argument have equal keys."
	self species = anAssociation species
		ifTrue: [ ^ key = anAssociation key ]
		ifFalse: [ ^ false ]
]

PCAssociation >> hash
[
	"Hash is reimplemented because = is implemented."
	^ key hash
]

PCAssociation >> key
[
	^ key
]

PCAssociation >> key: anObject
[
	key := anObject
]

PCAssociation >> key: aKey value: anObject
[
	key := aKey.
	value := anObject
]

PCAssociation >> printOn: aStream
[
	"Print in the format (key->value)."
	aStream nextPut: $(.
	key printOn: aStream.
	aStream nextPutAll: '->'.
	value printOn: aStream.
	aStream nextPut: $)
]

PCAssociation >> value
[
	^ value
]

PCAssociation >> value: anObject
[
	value := anObject
]

PCAssociation class
	instanceVariables: #().

PCAssociation class >> key: newKey value: newValue
[
	"Answer a new Association with the given key and value."
	^ self new key: newKey value: newValue
]

