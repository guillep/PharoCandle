PCSymbol
	superclass: #PCString;
	instanceSpecification: #(#variable #byte );
	instanceVariables: #();
	classVariables: #();
	package: #'PharoCandle-Kernel-Collections-Ordered'.

PCSymbol >> = anObject
[
^ self == anObject
]

PCSymbol >> asString
[
	"Answer a string containing my characters."
| sz result |
sz := self size.
result := PCString new: sz.
result
	replaceFrom: 1
	to: sz
	with: self
	startingAt: 1.
^ result
]

PCSymbol >> asSymbol
[
^ self
]

PCSymbol >> at: anInteger put: anObject
[
	"You cannot modify the receiver."
self errorNoModification
]

PCSymbol >> basicCopy
[
	"Answer myself because Symbols are unique."

]

PCSymbol >> errorNoModification
[
self error: 'Symbols can not be modified.'
]

PCSymbol >> hash
[
^ self identityHash
]

PCSymbol >> initFrom: aString
[
	"Warning! Use only to initialize new Symbols. Symbols are assumed to be immutable there after."
self size = aString size
	ifFalse: [ self error: 'size mismatch' ].
super
	replaceFrom: 1
	to: self size
	with: aString
	startingAt: 1
]

PCSymbol >> printOn: aStream
[
aStream nextPutAll: self
]

PCSymbol >> replaceFrom: start to: stop with: replacement startingAt: repStart
[
self errorNoModification
]

PCSymbol >> species
[
^ PCString
]

PCSymbol class
	instanceVariables: #().

PCSymbol class >> new: size
[
	"Symbols are unique. You can create a new Symbol from a String using 'asSymbol'."
self cannotInstantiate
]

